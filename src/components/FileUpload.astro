---
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);
---

<div class="bg-gray-900/80 backdrop-blur-sm rounded-lg p-6 border border-cyan-500/20">
  <h3 class="text-xl font-bold mb-4 bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
    Upload Book
  </h3>
  
  <form id="uploadForm" class="space-y-4">
    <div>
      <label for="file" class="block text-sm font-medium text-gray-300 mb-2">
        Select File (PDF, EPUB, MOBI)
      </label>
      <input
        type="file"
        id="file"
        accept=".pdf,.epub,.mobi"
        class="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-500"
      />
    </div>
    <button
      type="submit"
      class="w-full px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-md hover:from-cyan-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-cyan-500 transition-all duration-200"
    >
      Upload
    </button>
  </form>
</div>

<script>
  import { createClient } from '@supabase/supabase-js';

  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('uploadForm');
    const fileInput = document.getElementById('file');

    if (!form || !fileInput) return;

    const supabase = createClient(
      import.meta.env.PUBLIC_SUPABASE_URL,
      import.meta.env.PUBLIC_SUPABASE_ANON_KEY
    );

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const file = fileInput.files[0];
      if (!file) return;

      try {
        const { data: uploadData, error: uploadError } = await supabase.storage
          .from('books')
          .upload(`public/${file.name}`, file);

        if (uploadError) throw uploadError;

        const { data: dbData, error: dbError } = await supabase
          .from('book_files')
          .insert([
            {
              name: file.name,
              file_path: uploadData.path,
              size: file.size,
              mime_type: file.type
            }
          ]);

        if (dbError) throw dbError;

        alert('File uploaded successfully!');
        window.location.reload();
      } catch (error) {
        console.error('Error uploading file:', error);
        alert('Error uploading file. Please try again.');
      }
    });
  });
</script>